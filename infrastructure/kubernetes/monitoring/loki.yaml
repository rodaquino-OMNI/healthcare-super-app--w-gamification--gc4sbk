apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    name: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.9.2
          args:
            - "-config.file=/etc/loki/local-config.yaml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - mountPath: /etc/loki
              name: config
      volumes:
        - name: config
          configMap:
            name: loki-config
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  selector:
    app: loki
  ports:
    - port: 3100
      targetPort: 3100
      name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    chunk_store_config:
      max_look_back_period: 0s

    compactor:
      working_directory: /tmp/compactor
      shared_store: system

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: s3
          schema: v11

    storage_config:
      boltdb_shipper:
        active_index_directory: /tmp/index
        cache_location: /tmp/cache
        resync_interval: 5m
        ship_interval: 10m
        working_directory: /tmp/boltdb-shipper

      aws:
        bucketnames: austa-loki-bucket
        endpoint: s3.amazonaws.com

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h