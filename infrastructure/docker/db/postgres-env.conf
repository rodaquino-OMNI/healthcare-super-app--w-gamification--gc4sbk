# PostgreSQL Environment Configuration for Local Development
# This file contains environment variables and PostgreSQL configuration parameters
# optimized for the AUSTA SuperApp local development environment.

#------------------------------------------------------------------------------
# CONNECTION SETTINGS
#------------------------------------------------------------------------------

# Allow more connections for development with multiple services
max_connections = 100

# Reserve connections for superuser to ensure admin access even when connection limit is reached
superuser_reserved_connections = 3

# Increase connection timeout for debugging sessions
tcp_keepalives_idle = 300
tcp_keepalives_interval = 60
tcp_keepalives_count = 10

# Set a reasonable statement timeout to prevent runaway queries (5 minutes)
statement_timeout = 300000

# Set a longer lock timeout for debugging (30 seconds)
lock_timeout = 30000

#------------------------------------------------------------------------------
# MEMORY SETTINGS
#------------------------------------------------------------------------------

# Allocate 25% of system memory for shared buffers (adjust based on your development machine)
# For a typical development machine with 16GB RAM, this would be 4GB
shared_buffers = '4GB'

# Temporary buffers per session
temp_buffers = '64MB'

# Work memory for query operations (sort, hash, join)
work_mem = '64MB'

# Maintenance operations memory (VACUUM, CREATE INDEX, etc.)
maintenance_work_mem = '256MB'

# Effective cache size (estimate of how much memory is available for disk caching)
# Set to 50% of system memory for development
effective_cache_size = '8GB'

#------------------------------------------------------------------------------
# QUERY PLANNER SETTINGS
#------------------------------------------------------------------------------

# Cost of a non-sequentially-fetched disk page
# Lower for SSDs which is common in development environments
random_page_cost = 1.1

# Number of simultaneous requests that can be handled efficiently by the disk subsystem
# Higher for SSDs
effective_io_concurrency = 200

# Enable parallel query execution
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

#------------------------------------------------------------------------------
# WRITE AHEAD LOG (WAL) SETTINGS
#------------------------------------------------------------------------------

# Reduced durability for better performance in development
# WARNING: This can lead to data loss in case of a crash
synchronous_commit = off

# WAL level needed for logical replication
wal_level = logical

# Checkpoint settings
checkpoint_timeout = 15min
max_wal_size = '2GB'
min_wal_size = '1GB'

# Archive settings (disabled for development)
archive_mode = off

#------------------------------------------------------------------------------
# LOGGING SETTINGS
#------------------------------------------------------------------------------

# Enable verbose logging for development
log_destination = 'stderr'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB

# Log all statements that take more than 1 second
log_min_duration_statement = 1000

# Log all DDL statements, and data modification statements
log_statement = 'mod'

# Include useful information in log lines
log_line_prefix = '%m [%p] %q%u@%d '

# Log temporary files above 10MB
log_temp_files = 10MB

# Log checkpoints for performance analysis
log_checkpoints = on

# Log lock waits for debugging concurrency issues
log_lock_waits = on

# Log autovacuum operations
log_autovacuum_min_duration = 0

#------------------------------------------------------------------------------
# AUTOVACUUM SETTINGS
#------------------------------------------------------------------------------

# Enable autovacuum
autovacuum = on

# More aggressive vacuum for development to keep tables clean
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05

# Limit resource usage of autovacuum
autovacuum_max_workers = 3
autovacuum_naptime = 1min

#------------------------------------------------------------------------------
# TIMESCALEDB SETTINGS
#------------------------------------------------------------------------------

# Load TimescaleDB extension
shared_preload_libraries = 'timescaledb'

# Set maximum background workers for TimescaleDB
# At least 1 + number of databases in PostgreSQL instance
timescaledb.max_background_workers = 16

# Enable optimizations for time-series data
timescaledb.enable_chunk_append = on
timescaledb.enable_constraint_aware_append = on
timescaledb.enable_ordered_append = on
timescaledb.enable_vectorized_aggregation = on

#------------------------------------------------------------------------------
# DEVELOPER EXPERIENCE SETTINGS
#------------------------------------------------------------------------------

# Enable query execution statistics
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all

# Enable extended statistics for better query planning
track_activity_query_size = 4096

# Set a reasonable deadlock timeout (1 second)
deadlock_timeout = 1000

# Enable detailed error reporting
exit_on_error = off
restart_after_crash = on

# Set timezone to UTC for consistency
timezone = 'UTC'

# Set client encoding to UTF8
client_encoding = 'UTF8'

# Enable JIT compilation for better query performance
jit = on

#------------------------------------------------------------------------------
# RESOURCE USAGE SETTINGS
#------------------------------------------------------------------------------

# Increase max locks per transaction for complex queries across multiple chunks
# This is important for TimescaleDB hypertables
max_locks_per_transaction = 128

# Set reasonable limits for temporary file usage
temp_file_limit = '5GB'

# Increase the maximum number of prepared transactions for development
max_prepared_transactions = 100