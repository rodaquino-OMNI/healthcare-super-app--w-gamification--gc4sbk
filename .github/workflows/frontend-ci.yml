name: Frontend CI

on:
  push:
    branches:
      - develop
      - release/*
    paths:
      - src/web/**
      - src/web/mobile/**
      - src/web/design-system/**
      - src/web/shared/**
      - src/web/primitives/**
      - src/web/interfaces/**
      - src/web/journey-context/**
  pull_request:
    branches:
      - develop
    paths:
      - src/web/**
      - src/web/mobile/**
      - src/web/design-system/**
      - src/web/shared/**
      - src/web/primitives/**
      - src/web/interfaces/**
      - src/web/journey-context/**

jobs:
  # Dependency validation step
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Validate dependency resolution
        run: pnpm dedupe --check

  # Matrix-based lint job for workspace-aware builds
  lint:
    needs: validate-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [primitives, interfaces, journey-context, design-system, shared, mobile, web]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run eslint
        run: pnpm --filter "./src/web/${{ matrix.package }}" lint

  # Matrix-based typecheck job for workspace-aware builds
  typecheck:
    needs: validate-dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [primitives, interfaces, journey-context, design-system, shared, mobile, web]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run typecheck
        run: pnpm --filter "./src/web/${{ matrix.package }}" typecheck

  # Matrix-based test job for workspace-aware builds with enhanced coverage configuration
  test:
    needs: [lint, typecheck]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [primitives, interfaces, journey-context, design-system, shared, mobile, web]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run tests with coverage
        run: pnpm --filter "./src/web/${{ matrix.package }}" test:ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./src/web/${{ matrix.package }}/coverage
          flags: ${{ matrix.package }}
          fail_ci_if_error: true
          verbose: true
          threshold: 80
          thresholds: '80 80 80'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # End-to-end testing with updated Cypress configuration
  e2e:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup Cypress cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-cypress-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build application
        run: pnpm --filter "./src/web/web" build
      - name: Start server
        run: pnpm --filter "./src/web/web" start &
        shell: bash
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: src/web/web
          wait-on: http://localhost:3000
          browser: chrome
          record: true
          parallel: true
          group: 'UI Tests'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}