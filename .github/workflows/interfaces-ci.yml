name: Interfaces CI

on:
  push:
    branches: [main]
    paths:
      - 'src/web/interfaces/**'
      - '.github/workflows/interfaces-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/web/interfaces/**'
      - '.github/workflows/interfaces-ci.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  validate-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0' # Pinned exact version as specified in the technical spec

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Validate dependencies
        run: pnpm ls
        working-directory: src/web/interfaces

  lint:
    runs-on: ubuntu-latest
    needs: validate-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Run linting
        run: pnpm lint
        working-directory: src/web/interfaces

  typecheck:
    runs-on: ubuntu-latest
    needs: validate-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Verify TypeScript declarations
        run: pnpm tsc --noEmit
        working-directory: src/web/interfaces

  build:
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Build package
        run: pnpm build
        working-directory: src/web/interfaces

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: interfaces-build
          path: src/web/interfaces/dist

  test:
    runs-on: ubuntu-latest
    needs: validate-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Run tests
        run: pnpm test
        working-directory: src/web/interfaces

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: src/web/interfaces/coverage
          flags: interfaces
          fail_ci_if_error: false
          verbose: true

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.15.0'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@austa'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.x

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: interfaces-build
          path: src/web/interfaces/dist

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: src/web/interfaces

      - name: Publish package
        run: pnpm publish --no-git-checks
        working-directory: src/web/interfaces
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}