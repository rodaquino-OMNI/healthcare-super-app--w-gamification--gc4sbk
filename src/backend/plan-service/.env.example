# AUSTA SuperApp - Plan Service Environment Configuration
# This file serves as a template for required environment variables

#######################
# SERVER CONFIGURATION
#######################

# Port the service will listen on
PORT=3002

# Host the service will bind to
HOST=0.0.0.0

# CORS configuration
# Can be a single origin, comma-separated list, or regex pattern (wrapped in /)
CORS_ORIGIN=https://app.austa.com.br,http://localhost:3000

# Whether to allow credentials in CORS requests
CORS_CREDENTIALS=true

# Server request timeout in milliseconds
SERVER_TIMEOUT=30000

#########################
# DATABASE CONFIGURATION
#########################

# Complete database connection URL (if provided, other DB settings are ignored)
DATABASE_URL=postgresql://username:password@localhost:5432/austa_plan?schema=plan

# Individual database connection parameters (used if DATABASE_URL is not provided)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=austa_plan
DATABASE_SCHEMA=plan

# Whether to use SSL for database connection
DATABASE_SSL=true

# Database connection pool size
DATABASE_POOL_SIZE=20

#########################
# REDIS CONFIGURATION
#########################

# Redis connection parameters
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Default TTL for cached items in seconds
REDIS_TTL=3600

#########################
# KAFKA CONFIGURATION
#########################

# Comma-separated list of Kafka brokers
KAFKA_BROKERS=localhost:9092

# Client ID for this service
KAFKA_CLIENT_ID=plan-service

# Consumer group ID for this service
KAFKA_GROUP_ID=plan-service-group

# Prefix for Kafka topics created by this service
KAFKA_TOPIC_PREFIX=austa.plan

#############################
# INSURANCE API CONFIGURATION
#############################

# Base URL for the insurance provider API
INSURANCE_API_BASE_URL=https://api.insurance-provider.com/v1

# API key for authentication with the insurance provider
INSURANCE_API_KEY=your-api-key-here

# Timeout for insurance API requests in milliseconds
INSURANCE_API_TIMEOUT=10000

# Number of retry attempts for failed requests
INSURANCE_API_RETRIES=3

# Rate limiting window in milliseconds
INSURANCE_API_RATE_LIMIT_WINDOW=60000

# Maximum requests allowed in the rate limit window
INSURANCE_API_RATE_LIMIT_MAX=100

########################
# CLAIMS CONFIGURATION
########################

# Comma-separated list of supported document types for claims
CLAIMS_SUPPORTED_DOC_TYPES=pdf,jpg,jpeg,png

# Maximum document size in bytes (default: 10MB)
CLAIMS_MAX_DOC_SIZE=10485760

# Maximum number of documents allowed per claim
CLAIMS_MAX_DOCS_PER_CLAIM=5

# Threshold amount (in currency units) below which claims are auto-approved
CLAIMS_AUTO_APPROVAL_THRESHOLD=100

# Standard processing time estimate in days
CLAIMS_PROCESSING_TIME_STANDARD=3

# Express processing time estimate in days
CLAIMS_PROCESSING_TIME_EXPRESS=1

# Retention period for claim documents in days (default: 7 years)
CLAIMS_RETENTION_PERIOD=2555

#########################
# STORAGE CONFIGURATION
#########################

# Storage provider ('s3' or 'local')
STORAGE_PROVIDER=s3

# S3 configuration
S3_BUCKET=austa-plan-documents
S3_REGION=sa-east-1
S3_ACCESS_KEY_ID=your-access-key-id
S3_SECRET_ACCESS_KEY=your-secret-access-key
S3_ENDPOINT=https://s3.sa-east-1.amazonaws.com
S3_PATH_PREFIX=plan

# Local storage configuration (used if STORAGE_PROVIDER=local)
LOCAL_STORAGE_DIRECTORY=/app/storage/plan

##############################
# COST SIMULATOR CONFIGURATION
##############################

# Currency for cost calculations
COST_SIMULATOR_CURRENCY=BRL

# Source for procedure catalog ('database' or 'api')
PROCEDURE_CATALOG_SOURCE=database

# API endpoint for procedure catalog (if source is 'api')
PROCEDURE_CATALOG_API_ENDPOINT=https://api.procedures.austa.com.br

# Refresh interval for procedure catalog in seconds (default: 24 hours)
PROCEDURE_CATALOG_REFRESH_INTERVAL=86400

# Default coverage percentages for different procedure types
COVERAGE_DEFAULT_CONSULTATIONS=80
COVERAGE_DEFAULT_EXAMINATIONS=70
COVERAGE_DEFAULT_PROCEDURES=60
COVERAGE_DEFAULT_EMERGENCIES=90

#############################
# GAMIFICATION CONFIGURATION
#############################

# Whether gamification integration is enabled
GAMIFICATION_ENABLED=true

# Endpoint for sending gamification events
GAMIFICATION_EVENT_ENDPOINT=http://gamification-engine:3006/events

# Timeout for gamification API requests in milliseconds
GAMIFICATION_TIMEOUT=5000

# Event type names for different actions
GAMIFICATION_EVENT_CLAIM_SUBMITTED=CLAIM_SUBMITTED
GAMIFICATION_EVENT_CLAIM_APPROVED=CLAIM_APPROVED
GAMIFICATION_EVENT_DIGITAL_CARD_ACCESSED=DIGITAL_CARD_ACCESSED
GAMIFICATION_EVENT_BENEFIT_USED=BENEFIT_USED

##############################
# NOTIFICATIONS CONFIGURATION
##############################

# Whether notification integration is enabled
NOTIFICATIONS_ENABLED=true

# Endpoint for the notification service
NOTIFICATIONS_SERVICE_ENDPOINT=http://notification-service:3005/notifications

# Timeout for notification API requests in milliseconds
NOTIFICATIONS_TIMEOUT=5000

# Template IDs for different notification types
NOTIFICATIONS_TEMPLATE_CLAIM_STATUS=plan-claim-status
NOTIFICATIONS_TEMPLATE_CLAIM_REMINDER=plan-claim-reminder
NOTIFICATIONS_TEMPLATE_BENEFIT_EXPIRATION=plan-benefit-expiration

#############################
# OPENTELEMETRY CONFIGURATION
#############################

# Whether OpenTelemetry tracing is enabled
OTEL_ENABLED=true

# Service name for tracing
OTEL_SERVICE_NAME=plan-service

# OpenTelemetry collector endpoint
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318

# Headers for OpenTelemetry exporter (if needed)
OTEL_EXPORTER_OTLP_HEADERS=api-key=your-api-key

# Sampling strategy (options: always_on, always_off, traceidratio)
OTEL_TRACES_SAMPLER=traceidratio

# Sampler argument (e.g., sampling ratio when using traceidratio)
OTEL_TRACES_SAMPLER_ARG=0.1

#######################
# LOGGING CONFIGURATION
#######################

# Log level (debug, info, warn, error, fatal)
LOG_LEVEL=info

# Log format (json, pretty)
LOG_FORMAT=json

# Log destination (stdout, file)
LOG_DESTINATION=stdout

# Log filename (if LOG_DESTINATION=file)
LOG_FILENAME=/var/log/plan-service.log