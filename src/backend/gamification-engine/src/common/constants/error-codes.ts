/**
 * @file error-codes.ts
 * @description Defines standardized error codes and messages specific to the gamification engine.
 * These constants ensure consistent error handling, logging, and client responses for all error
 * scenarios encountered within the gamification modules.
 */

import { HttpStatus } from '@nestjs/common';
import { ErrorCategory, ErrorDomain, ErrorSeverity, ErrorType } from '../exceptions/error-types.enum';

/**
 * Interface for error code definition with all metadata
 */
export interface ErrorCodeDefinition {
  code: string;                 // Error code (e.g., 'GAME_001')
  message: string;              // Error message template
  httpStatus: HttpStatus;       // HTTP status code
  type: ErrorType;              // Error type
  category: ErrorCategory;      // Error category
  severity: ErrorSeverity;      // Error severity
  retryable: boolean;           // Whether the error is retryable
  loggable: boolean;            // Whether the error should be logged
  alertable: boolean;           // Whether the error should trigger alerts
}

/**
 * Achievement module error codes
 */
export const ACHIEVEMENT_ERROR_CODES = {
  // Client errors (4xx)
  ACHIEVEMENT_NOT_FOUND: 'ACH_001',
  USER_ACHIEVEMENT_NOT_FOUND: 'ACH_002',
  INVALID_ACHIEVEMENT_DATA: 'ACH_003',
  ACHIEVEMENT_ALREADY_UNLOCKED: 'ACH_004',
  ACHIEVEMENT_CRITERIA_NOT_MET: 'ACH_005',
  ACHIEVEMENT_DISABLED: 'ACH_006',
  
  // System errors (5xx)
  ACHIEVEMENT_PROCESSING_FAILED: 'ACH_501',
  ACHIEVEMENT_PERSISTENCE_ERROR: 'ACH_502',
  ACHIEVEMENT_NOTIFICATION_FAILED: 'ACH_503',
  ACHIEVEMENT_RULE_EVALUATION_FAILED: 'ACH_504',
  ACHIEVEMENT_SYNC_FAILED: 'ACH_505'
};

/**
 * Event module error codes
 */
export const EVENT_ERROR_CODES = {
  // Client errors (4xx)
  EVENT_VALIDATION_FAILED: 'EVT_001',
  EVENT_MISSING_REQUIRED_FIELDS: 'EVT_002',
  EVENT_INVALID_TYPE: 'EVT_003',
  EVENT_INVALID_JOURNEY: 'EVT_004',
  EVENT_INVALID_USER_ID: 'EVT_005',
  EVENT_DUPLICATE: 'EVT_006',
  
  // System errors (5xx)
  EVENT_PROCESSING_FAILED: 'EVT_501',
  EVENT_PERSISTENCE_ERROR: 'EVT_502',
  EVENT_PUBLISHING_FAILED: 'EVT_503',
  EVENT_CONSUMPTION_FAILED: 'EVT_504',
  EVENT_ROUTING_FAILED: 'EVT_505'
};

/**
 * Quest module error codes
 */
export const QUEST_ERROR_CODES = {
  // Client errors (4xx)
  QUEST_NOT_FOUND: 'QST_001',
  USER_QUEST_NOT_FOUND: 'QST_002',
  INVALID_QUEST_DATA: 'QST_003',
  QUEST_ALREADY_COMPLETED: 'QST_004',
  QUEST_PREREQUISITES_NOT_MET: 'QST_005',
  QUEST_EXPIRED: 'QST_006',
  QUEST_NOT_STARTED: 'QST_007',
  
  // System errors (5xx)
  QUEST_PROCESSING_FAILED: 'QST_501',
  QUEST_PERSISTENCE_ERROR: 'QST_502',
  QUEST_PROGRESS_UPDATE_FAILED: 'QST_503',
  QUEST_COMPLETION_FAILED: 'QST_504',
  QUEST_REWARD_DISTRIBUTION_FAILED: 'QST_505'
};

/**
 * Reward module error codes
 */
export const REWARD_ERROR_CODES = {
  // Client errors (4xx)
  REWARD_NOT_FOUND: 'RWD_001',
  USER_REWARD_NOT_FOUND: 'RWD_002',
  INVALID_REWARD_DATA: 'RWD_003',
  REWARD_ALREADY_CLAIMED: 'RWD_004',
  REWARD_PREREQUISITES_NOT_MET: 'RWD_005',
  REWARD_EXPIRED: 'RWD_006',
  INSUFFICIENT_POINTS: 'RWD_007',
  
  // System errors (5xx)
  REWARD_PROCESSING_FAILED: 'RWD_501',
  REWARD_PERSISTENCE_ERROR: 'RWD_502',
  REWARD_DISTRIBUTION_FAILED: 'RWD_503',
  REWARD_NOTIFICATION_FAILED: 'RWD_504',
  REWARD_SYNC_FAILED: 'RWD_505'
};

/**
 * Rule module error codes
 */
export const RULE_ERROR_CODES = {
  // Client errors (4xx)
  RULE_NOT_FOUND: 'RUL_001',
  INVALID_RULE_DATA: 'RUL_002',
  RULE_DISABLED: 'RUL_003',
  RULE_CONDITION_INVALID: 'RUL_004',
  RULE_ACTION_INVALID: 'RUL_005',
  
  // System errors (5xx)
  RULE_PROCESSING_FAILED: 'RUL_501',
  RULE_PERSISTENCE_ERROR: 'RUL_502',
  RULE_EVALUATION_FAILED: 'RUL_503',
  RULE_ACTION_EXECUTION_FAILED: 'RUL_504',
  RULE_LOADING_FAILED: 'RUL_505'
};

/**
 * Profile module error codes
 */
export const PROFILE_ERROR_CODES = {
  // Client errors (4xx)
  PROFILE_NOT_FOUND: 'PRF_001',
  INVALID_PROFILE_DATA: 'PRF_002',
  PROFILE_ALREADY_EXISTS: 'PRF_003',
  PROFILE_DISABLED: 'PRF_004',
  INVALID_XP_AMOUNT: 'PRF_005',
  INVALID_LEVEL: 'PRF_006',
  
  // System errors (5xx)
  PROFILE_PROCESSING_FAILED: 'PRF_501',
  PROFILE_PERSISTENCE_ERROR: 'PRF_502',
  PROFILE_UPDATE_FAILED: 'PRF_503',
  PROFILE_CREATION_FAILED: 'PRF_504',
  PROFILE_SYNC_FAILED: 'PRF_505'
};

/**
 * Leaderboard module error codes
 */
export const LEADERBOARD_ERROR_CODES = {
  // Client errors (4xx)
  LEADERBOARD_NOT_FOUND: 'LDB_001',
  INVALID_LEADERBOARD_PARAMETERS: 'LDB_002',
  INVALID_JOURNEY_TYPE: 'LDB_003',
  INVALID_TIME_PERIOD: 'LDB_004',
  INVALID_LEADERBOARD_SIZE: 'LDB_005',
  
  // System errors (5xx)
  LEADERBOARD_PROCESSING_FAILED: 'LDB_501',
  LEADERBOARD_PERSISTENCE_ERROR: 'LDB_502',
  LEADERBOARD_CALCULATION_FAILED: 'LDB_503',
  LEADERBOARD_CACHE_ERROR: 'LDB_504',
  LEADERBOARD_REFRESH_FAILED: 'LDB_505'
};

/**
 * Database error codes
 */
export const DATABASE_ERROR_CODES = {
  CONNECTION_FAILED: 'DB_501',
  QUERY_FAILED: 'DB_502',
  TRANSACTION_FAILED: 'DB_503',
  CONSTRAINT_VIOLATION: 'DB_504',
  DEADLOCK_DETECTED: 'DB_505',
  TIMEOUT: 'DB_506',
  CONNECTION_POOL_EXHAUSTED: 'DB_507',
  MIGRATION_FAILED: 'DB_508'
};

/**
 * Kafka error codes
 */
export const KAFKA_ERROR_CODES = {
  PRODUCER_ERROR: 'KFK_501',
  CONSUMER_ERROR: 'KFK_502',
  BROKER_UNAVAILABLE: 'KFK_503',
  TOPIC_CREATION_FAILED: 'KFK_504',
  MESSAGE_SERIALIZATION_FAILED: 'KFK_505',
  MESSAGE_DESERIALIZATION_FAILED: 'KFK_506',
  SCHEMA_VALIDATION_FAILED: 'KFK_507',
  REBALANCING_ERROR: 'KFK_508'
};

/**
 * Redis error codes
 */
export const REDIS_ERROR_CODES = {
  CONNECTION_FAILED: 'RDS_501',
  OPERATION_FAILED: 'RDS_502',
  KEY_NOT_FOUND: 'RDS_503',
  SERIALIZATION_FAILED: 'RDS_504',
  DESERIALIZATION_FAILED: 'RDS_505',
  TIMEOUT: 'RDS_506',
  MEMORY_LIMIT_REACHED: 'RDS_507'
};

/**
 * General error codes
 */
export const GENERAL_ERROR_CODES = {
  // Client errors (4xx)
  BAD_REQUEST: 'GEN_001',
  UNAUTHORIZED: 'GEN_002',
  FORBIDDEN: 'GEN_003',
  NOT_FOUND: 'GEN_004',
  METHOD_NOT_ALLOWED: 'GEN_005',
  CONFLICT: 'GEN_006',
  GONE: 'GEN_007',
  UNPROCESSABLE_ENTITY: 'GEN_008',
  TOO_MANY_REQUESTS: 'GEN_009',
  
  // System errors (5xx)
  INTERNAL_SERVER_ERROR: 'GEN_501',
  NOT_IMPLEMENTED: 'GEN_502',
  SERVICE_UNAVAILABLE: 'GEN_503',
  GATEWAY_TIMEOUT: 'GEN_504',
  UNEXPECTED_ERROR: 'GEN_505'
};

/**
 * Consolidated error codes from all modules
 */
export const ERROR_CODES = {
  ...ACHIEVEMENT_ERROR_CODES,
  ...EVENT_ERROR_CODES,
  ...QUEST_ERROR_CODES,
  ...REWARD_ERROR_CODES,
  ...RULE_ERROR_CODES,
  ...PROFILE_ERROR_CODES,
  ...LEADERBOARD_ERROR_CODES,
  ...DATABASE_ERROR_CODES,
  ...KAFKA_ERROR_CODES,
  ...REDIS_ERROR_CODES,
  ...GENERAL_ERROR_CODES
};

/**
 * Maps error codes to HTTP status codes
 */
export const HTTP_STATUS_MAP: Record<string, HttpStatus> = {
  // Achievement error codes
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [ACHIEVEMENT_ERROR_CODES.USER_ACHIEVEMENT_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [ACHIEVEMENT_ERROR_CODES.INVALID_ACHIEVEMENT_DATA]: HttpStatus.BAD_REQUEST,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_ALREADY_UNLOCKED]: HttpStatus.CONFLICT,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_CRITERIA_NOT_MET]: HttpStatus.BAD_REQUEST,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_DISABLED]: HttpStatus.FORBIDDEN,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOTIFICATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_RULE_EVALUATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_SYNC_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Event error codes
  [EVENT_ERROR_CODES.EVENT_VALIDATION_FAILED]: HttpStatus.BAD_REQUEST,
  [EVENT_ERROR_CODES.EVENT_MISSING_REQUIRED_FIELDS]: HttpStatus.BAD_REQUEST,
  [EVENT_ERROR_CODES.EVENT_INVALID_TYPE]: HttpStatus.BAD_REQUEST,
  [EVENT_ERROR_CODES.EVENT_INVALID_JOURNEY]: HttpStatus.BAD_REQUEST,
  [EVENT_ERROR_CODES.EVENT_INVALID_USER_ID]: HttpStatus.BAD_REQUEST,
  [EVENT_ERROR_CODES.EVENT_DUPLICATE]: HttpStatus.CONFLICT,
  [EVENT_ERROR_CODES.EVENT_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [EVENT_ERROR_CODES.EVENT_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [EVENT_ERROR_CODES.EVENT_PUBLISHING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [EVENT_ERROR_CODES.EVENT_CONSUMPTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [EVENT_ERROR_CODES.EVENT_ROUTING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Quest error codes
  [QUEST_ERROR_CODES.QUEST_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [QUEST_ERROR_CODES.USER_QUEST_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [QUEST_ERROR_CODES.INVALID_QUEST_DATA]: HttpStatus.BAD_REQUEST,
  [QUEST_ERROR_CODES.QUEST_ALREADY_COMPLETED]: HttpStatus.CONFLICT,
  [QUEST_ERROR_CODES.QUEST_PREREQUISITES_NOT_MET]: HttpStatus.BAD_REQUEST,
  [QUEST_ERROR_CODES.QUEST_EXPIRED]: HttpStatus.GONE,
  [QUEST_ERROR_CODES.QUEST_NOT_STARTED]: HttpStatus.BAD_REQUEST,
  [QUEST_ERROR_CODES.QUEST_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [QUEST_ERROR_CODES.QUEST_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [QUEST_ERROR_CODES.QUEST_PROGRESS_UPDATE_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [QUEST_ERROR_CODES.QUEST_COMPLETION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [QUEST_ERROR_CODES.QUEST_REWARD_DISTRIBUTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Reward error codes
  [REWARD_ERROR_CODES.REWARD_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [REWARD_ERROR_CODES.USER_REWARD_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [REWARD_ERROR_CODES.INVALID_REWARD_DATA]: HttpStatus.BAD_REQUEST,
  [REWARD_ERROR_CODES.REWARD_ALREADY_CLAIMED]: HttpStatus.CONFLICT,
  [REWARD_ERROR_CODES.REWARD_PREREQUISITES_NOT_MET]: HttpStatus.BAD_REQUEST,
  [REWARD_ERROR_CODES.REWARD_EXPIRED]: HttpStatus.GONE,
  [REWARD_ERROR_CODES.INSUFFICIENT_POINTS]: HttpStatus.BAD_REQUEST,
  [REWARD_ERROR_CODES.REWARD_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REWARD_ERROR_CODES.REWARD_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REWARD_ERROR_CODES.REWARD_DISTRIBUTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REWARD_ERROR_CODES.REWARD_NOTIFICATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REWARD_ERROR_CODES.REWARD_SYNC_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Rule error codes
  [RULE_ERROR_CODES.RULE_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [RULE_ERROR_CODES.INVALID_RULE_DATA]: HttpStatus.BAD_REQUEST,
  [RULE_ERROR_CODES.RULE_DISABLED]: HttpStatus.FORBIDDEN,
  [RULE_ERROR_CODES.RULE_CONDITION_INVALID]: HttpStatus.BAD_REQUEST,
  [RULE_ERROR_CODES.RULE_ACTION_INVALID]: HttpStatus.BAD_REQUEST,
  [RULE_ERROR_CODES.RULE_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [RULE_ERROR_CODES.RULE_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [RULE_ERROR_CODES.RULE_EVALUATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [RULE_ERROR_CODES.RULE_ACTION_EXECUTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [RULE_ERROR_CODES.RULE_LOADING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Profile error codes
  [PROFILE_ERROR_CODES.PROFILE_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [PROFILE_ERROR_CODES.INVALID_PROFILE_DATA]: HttpStatus.BAD_REQUEST,
  [PROFILE_ERROR_CODES.PROFILE_ALREADY_EXISTS]: HttpStatus.CONFLICT,
  [PROFILE_ERROR_CODES.PROFILE_DISABLED]: HttpStatus.FORBIDDEN,
  [PROFILE_ERROR_CODES.INVALID_XP_AMOUNT]: HttpStatus.BAD_REQUEST,
  [PROFILE_ERROR_CODES.INVALID_LEVEL]: HttpStatus.BAD_REQUEST,
  [PROFILE_ERROR_CODES.PROFILE_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_UPDATE_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_CREATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_SYNC_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Leaderboard error codes
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_PARAMETERS]: HttpStatus.BAD_REQUEST,
  [LEADERBOARD_ERROR_CODES.INVALID_JOURNEY_TYPE]: HttpStatus.BAD_REQUEST,
  [LEADERBOARD_ERROR_CODES.INVALID_TIME_PERIOD]: HttpStatus.BAD_REQUEST,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_SIZE]: HttpStatus.BAD_REQUEST,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PROCESSING_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PERSISTENCE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CALCULATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CACHE_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_REFRESH_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Database error codes
  [DATABASE_ERROR_CODES.CONNECTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [DATABASE_ERROR_CODES.QUERY_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [DATABASE_ERROR_CODES.TRANSACTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [DATABASE_ERROR_CODES.CONSTRAINT_VIOLATION]: HttpStatus.INTERNAL_SERVER_ERROR,
  [DATABASE_ERROR_CODES.DEADLOCK_DETECTED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [DATABASE_ERROR_CODES.TIMEOUT]: HttpStatus.GATEWAY_TIMEOUT,
  [DATABASE_ERROR_CODES.CONNECTION_POOL_EXHAUSTED]: HttpStatus.SERVICE_UNAVAILABLE,
  [DATABASE_ERROR_CODES.MIGRATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Kafka error codes
  [KAFKA_ERROR_CODES.PRODUCER_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [KAFKA_ERROR_CODES.CONSUMER_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [KAFKA_ERROR_CODES.BROKER_UNAVAILABLE]: HttpStatus.SERVICE_UNAVAILABLE,
  [KAFKA_ERROR_CODES.TOPIC_CREATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_SERIALIZATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_DESERIALIZATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [KAFKA_ERROR_CODES.SCHEMA_VALIDATION_FAILED]: HttpStatus.BAD_REQUEST,
  [KAFKA_ERROR_CODES.REBALANCING_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  
  // Redis error codes
  [REDIS_ERROR_CODES.CONNECTION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REDIS_ERROR_CODES.OPERATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REDIS_ERROR_CODES.KEY_NOT_FOUND]: HttpStatus.NOT_FOUND,
  [REDIS_ERROR_CODES.SERIALIZATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REDIS_ERROR_CODES.DESERIALIZATION_FAILED]: HttpStatus.INTERNAL_SERVER_ERROR,
  [REDIS_ERROR_CODES.TIMEOUT]: HttpStatus.GATEWAY_TIMEOUT,
  [REDIS_ERROR_CODES.MEMORY_LIMIT_REACHED]: HttpStatus.SERVICE_UNAVAILABLE,
  
  // General error codes
  [GENERAL_ERROR_CODES.BAD_REQUEST]: HttpStatus.BAD_REQUEST,
  [GENERAL_ERROR_CODES.UNAUTHORIZED]: HttpStatus.UNAUTHORIZED,
  [GENERAL_ERROR_CODES.FORBIDDEN]: HttpStatus.FORBIDDEN,
  [GENERAL_ERROR_CODES.NOT_FOUND]: HttpStatus.NOT_FOUND,
  [GENERAL_ERROR_CODES.METHOD_NOT_ALLOWED]: HttpStatus.METHOD_NOT_ALLOWED,
  [GENERAL_ERROR_CODES.CONFLICT]: HttpStatus.CONFLICT,
  [GENERAL_ERROR_CODES.GONE]: HttpStatus.GONE,
  [GENERAL_ERROR_CODES.UNPROCESSABLE_ENTITY]: HttpStatus.UNPROCESSABLE_ENTITY,
  [GENERAL_ERROR_CODES.TOO_MANY_REQUESTS]: HttpStatus.TOO_MANY_REQUESTS,
  [GENERAL_ERROR_CODES.INTERNAL_SERVER_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR,
  [GENERAL_ERROR_CODES.NOT_IMPLEMENTED]: HttpStatus.NOT_IMPLEMENTED,
  [GENERAL_ERROR_CODES.SERVICE_UNAVAILABLE]: HttpStatus.SERVICE_UNAVAILABLE,
  [GENERAL_ERROR_CODES.GATEWAY_TIMEOUT]: HttpStatus.GATEWAY_TIMEOUT,
  [GENERAL_ERROR_CODES.UNEXPECTED_ERROR]: HttpStatus.INTERNAL_SERVER_ERROR
};

/**
 * Maps error codes to error types
 */
export const ERROR_TYPE_MAP: Record<string, ErrorType> = {
  // Achievement error codes
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOT_FOUND]: ErrorType.ACHIEVEMENT_NOT_FOUND,
  [ACHIEVEMENT_ERROR_CODES.USER_ACHIEVEMENT_NOT_FOUND]: ErrorType.USER_ACHIEVEMENT_NOT_FOUND,
  [ACHIEVEMENT_ERROR_CODES.INVALID_ACHIEVEMENT_DATA]: ErrorType.INVALID_INPUT,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_ALREADY_UNLOCKED]: ErrorType.CONFLICT,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_CRITERIA_NOT_MET]: ErrorType.PREREQUISITES_NOT_MET,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_DISABLED]: ErrorType.FORBIDDEN,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PROCESSING_FAILED]: ErrorType.ACHIEVEMENT_PROCESSING_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOTIFICATION_FAILED]: ErrorType.NOTIFICATION_SERVICE_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_RULE_EVALUATION_FAILED]: ErrorType.RULE_EVALUATION_ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_SYNC_FAILED]: ErrorType.EXTERNAL_SERVICE_ERROR,
  
  // Event error codes
  [EVENT_ERROR_CODES.EVENT_VALIDATION_FAILED]: ErrorType.INVALID_INPUT,
  [EVENT_ERROR_CODES.EVENT_MISSING_REQUIRED_FIELDS]: ErrorType.MISSING_REQUIRED_FIELD,
  [EVENT_ERROR_CODES.EVENT_INVALID_TYPE]: ErrorType.INVALID_ENUM_VALUE,
  [EVENT_ERROR_CODES.EVENT_INVALID_JOURNEY]: ErrorType.INVALID_ENUM_VALUE,
  [EVENT_ERROR_CODES.EVENT_INVALID_USER_ID]: ErrorType.INVALID_INPUT,
  [EVENT_ERROR_CODES.EVENT_DUPLICATE]: ErrorType.DUPLICATE_ENTRY,
  [EVENT_ERROR_CODES.EVENT_PROCESSING_FAILED]: ErrorType.EVENT_PROCESSING_ERROR,
  [EVENT_ERROR_CODES.EVENT_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [EVENT_ERROR_CODES.EVENT_PUBLISHING_FAILED]: ErrorType.KAFKA_PRODUCER_ERROR,
  [EVENT_ERROR_CODES.EVENT_CONSUMPTION_FAILED]: ErrorType.KAFKA_CONSUMER_ERROR,
  [EVENT_ERROR_CODES.EVENT_ROUTING_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  
  // Quest error codes
  [QUEST_ERROR_CODES.QUEST_NOT_FOUND]: ErrorType.QUEST_NOT_FOUND,
  [QUEST_ERROR_CODES.USER_QUEST_NOT_FOUND]: ErrorType.USER_QUEST_NOT_FOUND,
  [QUEST_ERROR_CODES.INVALID_QUEST_DATA]: ErrorType.INVALID_INPUT,
  [QUEST_ERROR_CODES.QUEST_ALREADY_COMPLETED]: ErrorType.ALREADY_COMPLETED,
  [QUEST_ERROR_CODES.QUEST_PREREQUISITES_NOT_MET]: ErrorType.PREREQUISITES_NOT_MET,
  [QUEST_ERROR_CODES.QUEST_EXPIRED]: ErrorType.GONE,
  [QUEST_ERROR_CODES.QUEST_NOT_STARTED]: ErrorType.INVALID_STATE_TRANSITION,
  [QUEST_ERROR_CODES.QUEST_PROCESSING_FAILED]: ErrorType.QUEST_PROCESSING_ERROR,
  [QUEST_ERROR_CODES.QUEST_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [QUEST_ERROR_CODES.QUEST_PROGRESS_UPDATE_FAILED]: ErrorType.DATABASE_QUERY_ERROR,
  [QUEST_ERROR_CODES.QUEST_COMPLETION_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  [QUEST_ERROR_CODES.QUEST_REWARD_DISTRIBUTION_FAILED]: ErrorType.REWARD_PROCESSING_ERROR,
  
  // Reward error codes
  [REWARD_ERROR_CODES.REWARD_NOT_FOUND]: ErrorType.REWARD_NOT_FOUND,
  [REWARD_ERROR_CODES.USER_REWARD_NOT_FOUND]: ErrorType.USER_REWARD_NOT_FOUND,
  [REWARD_ERROR_CODES.INVALID_REWARD_DATA]: ErrorType.INVALID_INPUT,
  [REWARD_ERROR_CODES.REWARD_ALREADY_CLAIMED]: ErrorType.REWARD_ALREADY_CLAIMED,
  [REWARD_ERROR_CODES.REWARD_PREREQUISITES_NOT_MET]: ErrorType.PREREQUISITES_NOT_MET,
  [REWARD_ERROR_CODES.REWARD_EXPIRED]: ErrorType.GONE,
  [REWARD_ERROR_CODES.INSUFFICIENT_POINTS]: ErrorType.INSUFFICIENT_POINTS,
  [REWARD_ERROR_CODES.REWARD_PROCESSING_FAILED]: ErrorType.REWARD_PROCESSING_ERROR,
  [REWARD_ERROR_CODES.REWARD_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [REWARD_ERROR_CODES.REWARD_DISTRIBUTION_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  [REWARD_ERROR_CODES.REWARD_NOTIFICATION_FAILED]: ErrorType.NOTIFICATION_SERVICE_ERROR,
  [REWARD_ERROR_CODES.REWARD_SYNC_FAILED]: ErrorType.EXTERNAL_SERVICE_ERROR,
  
  // Rule error codes
  [RULE_ERROR_CODES.RULE_NOT_FOUND]: ErrorType.RULE_NOT_FOUND,
  [RULE_ERROR_CODES.INVALID_RULE_DATA]: ErrorType.INVALID_INPUT,
  [RULE_ERROR_CODES.RULE_DISABLED]: ErrorType.FORBIDDEN,
  [RULE_ERROR_CODES.RULE_CONDITION_INVALID]: ErrorType.INVALID_INPUT,
  [RULE_ERROR_CODES.RULE_ACTION_INVALID]: ErrorType.INVALID_INPUT,
  [RULE_ERROR_CODES.RULE_PROCESSING_FAILED]: ErrorType.RULE_EVALUATION_ERROR,
  [RULE_ERROR_CODES.RULE_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [RULE_ERROR_CODES.RULE_EVALUATION_FAILED]: ErrorType.RULE_EVALUATION_ERROR,
  [RULE_ERROR_CODES.RULE_ACTION_EXECUTION_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  [RULE_ERROR_CODES.RULE_LOADING_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  
  // Profile error codes
  [PROFILE_ERROR_CODES.PROFILE_NOT_FOUND]: ErrorType.PROFILE_NOT_FOUND,
  [PROFILE_ERROR_CODES.INVALID_PROFILE_DATA]: ErrorType.INVALID_INPUT,
  [PROFILE_ERROR_CODES.PROFILE_ALREADY_EXISTS]: ErrorType.DUPLICATE_ENTRY,
  [PROFILE_ERROR_CODES.PROFILE_DISABLED]: ErrorType.FORBIDDEN,
  [PROFILE_ERROR_CODES.INVALID_XP_AMOUNT]: ErrorType.INVALID_NUMERIC_VALUE,
  [PROFILE_ERROR_CODES.INVALID_LEVEL]: ErrorType.INVALID_NUMERIC_VALUE,
  [PROFILE_ERROR_CODES.PROFILE_PROCESSING_FAILED]: ErrorType.INTERNAL_SERVER_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_UPDATE_FAILED]: ErrorType.DATABASE_QUERY_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_CREATION_FAILED]: ErrorType.DATABASE_QUERY_ERROR,
  [PROFILE_ERROR_CODES.PROFILE_SYNC_FAILED]: ErrorType.EXTERNAL_SERVICE_ERROR,
  
  // Leaderboard error codes
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_NOT_FOUND]: ErrorType.LEADERBOARD_NOT_FOUND,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_PARAMETERS]: ErrorType.INVALID_INPUT,
  [LEADERBOARD_ERROR_CODES.INVALID_JOURNEY_TYPE]: ErrorType.INVALID_ENUM_VALUE,
  [LEADERBOARD_ERROR_CODES.INVALID_TIME_PERIOD]: ErrorType.INVALID_DATE,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_SIZE]: ErrorType.INVALID_NUMERIC_VALUE,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PROCESSING_FAILED]: ErrorType.LEADERBOARD_UPDATE_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PERSISTENCE_ERROR]: ErrorType.DATABASE_QUERY_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CALCULATION_FAILED]: ErrorType.LEADERBOARD_UPDATE_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CACHE_ERROR]: ErrorType.CACHE_OPERATION_ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_REFRESH_FAILED]: ErrorType.LEADERBOARD_UPDATE_ERROR,
  
  // Database error codes
  [DATABASE_ERROR_CODES.CONNECTION_FAILED]: ErrorType.DATABASE_CONNECTION_ERROR,
  [DATABASE_ERROR_CODES.QUERY_FAILED]: ErrorType.DATABASE_QUERY_ERROR,
  [DATABASE_ERROR_CODES.TRANSACTION_FAILED]: ErrorType.DATABASE_TRANSACTION_ERROR,
  [DATABASE_ERROR_CODES.CONSTRAINT_VIOLATION]: ErrorType.DATABASE_CONSTRAINT_ERROR,
  [DATABASE_ERROR_CODES.DEADLOCK_DETECTED]: ErrorType.DATABASE_DEADLOCK_ERROR,
  [DATABASE_ERROR_CODES.TIMEOUT]: ErrorType.DATABASE_TIMEOUT_ERROR,
  [DATABASE_ERROR_CODES.CONNECTION_POOL_EXHAUSTED]: ErrorType.DATABASE_CONNECTION_ERROR,
  [DATABASE_ERROR_CODES.MIGRATION_FAILED]: ErrorType.DATABASE_QUERY_ERROR,
  
  // Kafka error codes
  [KAFKA_ERROR_CODES.PRODUCER_ERROR]: ErrorType.KAFKA_PRODUCER_ERROR,
  [KAFKA_ERROR_CODES.CONSUMER_ERROR]: ErrorType.KAFKA_CONSUMER_ERROR,
  [KAFKA_ERROR_CODES.BROKER_UNAVAILABLE]: ErrorType.KAFKA_BROKER_UNAVAILABLE,
  [KAFKA_ERROR_CODES.TOPIC_CREATION_FAILED]: ErrorType.KAFKA_ADMIN_ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_SERIALIZATION_FAILED]: ErrorType.KAFKA_SCHEMA_ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_DESERIALIZATION_FAILED]: ErrorType.KAFKA_SCHEMA_ERROR,
  [KAFKA_ERROR_CODES.SCHEMA_VALIDATION_FAILED]: ErrorType.KAFKA_SCHEMA_ERROR,
  [KAFKA_ERROR_CODES.REBALANCING_ERROR]: ErrorType.KAFKA_REBALANCING,
  
  // Redis error codes
  [REDIS_ERROR_CODES.CONNECTION_FAILED]: ErrorType.CACHE_CONNECTION_ERROR,
  [REDIS_ERROR_CODES.OPERATION_FAILED]: ErrorType.CACHE_OPERATION_ERROR,
  [REDIS_ERROR_CODES.KEY_NOT_FOUND]: ErrorType.NOT_FOUND,
  [REDIS_ERROR_CODES.SERIALIZATION_FAILED]: ErrorType.CACHE_OPERATION_ERROR,
  [REDIS_ERROR_CODES.DESERIALIZATION_FAILED]: ErrorType.CACHE_OPERATION_ERROR,
  [REDIS_ERROR_CODES.TIMEOUT]: ErrorType.CACHE_OPERATION_ERROR,
  [REDIS_ERROR_CODES.MEMORY_LIMIT_REACHED]: ErrorType.CACHE_OPERATION_ERROR,
  
  // General error codes
  [GENERAL_ERROR_CODES.BAD_REQUEST]: ErrorType.BAD_REQUEST,
  [GENERAL_ERROR_CODES.UNAUTHORIZED]: ErrorType.UNAUTHORIZED,
  [GENERAL_ERROR_CODES.FORBIDDEN]: ErrorType.FORBIDDEN,
  [GENERAL_ERROR_CODES.NOT_FOUND]: ErrorType.NOT_FOUND,
  [GENERAL_ERROR_CODES.METHOD_NOT_ALLOWED]: ErrorType.METHOD_NOT_ALLOWED,
  [GENERAL_ERROR_CODES.CONFLICT]: ErrorType.CONFLICT,
  [GENERAL_ERROR_CODES.GONE]: ErrorType.GONE,
  [GENERAL_ERROR_CODES.UNPROCESSABLE_ENTITY]: ErrorType.INVALID_INPUT,
  [GENERAL_ERROR_CODES.TOO_MANY_REQUESTS]: ErrorType.TOO_MANY_REQUESTS,
  [GENERAL_ERROR_CODES.INTERNAL_SERVER_ERROR]: ErrorType.INTERNAL_SERVER_ERROR,
  [GENERAL_ERROR_CODES.NOT_IMPLEMENTED]: ErrorType.NOT_IMPLEMENTED,
  [GENERAL_ERROR_CODES.SERVICE_UNAVAILABLE]: ErrorType.SERVICE_UNAVAILABLE,
  [GENERAL_ERROR_CODES.GATEWAY_TIMEOUT]: ErrorType.GATEWAY_TIMEOUT,
  [GENERAL_ERROR_CODES.UNEXPECTED_ERROR]: ErrorType.UNEXPECTED_ERROR
};

/**
 * Maps error codes to error categories
 */
export const ERROR_CATEGORY_MAP: Record<string, ErrorCategory> = {
  // Map all error codes to their categories based on the error type
  ...Object.entries(ERROR_TYPE_MAP).reduce((acc, [code, type]) => {
    acc[code] = ERROR_TYPE_TO_CATEGORY[type];
    return acc;
  }, {} as Record<string, ErrorCategory>)
};

/**
 * Maps error codes to error severity levels
 */
export const ERROR_SEVERITY_MAP: Record<string, ErrorSeverity> = {
  // Achievement error codes
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOT_FOUND]: ErrorSeverity.WARNING,
  [ACHIEVEMENT_ERROR_CODES.USER_ACHIEVEMENT_NOT_FOUND]: ErrorSeverity.WARNING,
  [ACHIEVEMENT_ERROR_CODES.INVALID_ACHIEVEMENT_DATA]: ErrorSeverity.WARNING,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_ALREADY_UNLOCKED]: ErrorSeverity.INFO,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_CRITERIA_NOT_MET]: ErrorSeverity.INFO,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_DISABLED]: ErrorSeverity.INFO,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOTIFICATION_FAILED]: ErrorSeverity.WARNING,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_RULE_EVALUATION_FAILED]: ErrorSeverity.ERROR,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_SYNC_FAILED]: ErrorSeverity.WARNING,
  
  // Event error codes
  [EVENT_ERROR_CODES.EVENT_VALIDATION_FAILED]: ErrorSeverity.WARNING,
  [EVENT_ERROR_CODES.EVENT_MISSING_REQUIRED_FIELDS]: ErrorSeverity.WARNING,
  [EVENT_ERROR_CODES.EVENT_INVALID_TYPE]: ErrorSeverity.WARNING,
  [EVENT_ERROR_CODES.EVENT_INVALID_JOURNEY]: ErrorSeverity.WARNING,
  [EVENT_ERROR_CODES.EVENT_INVALID_USER_ID]: ErrorSeverity.WARNING,
  [EVENT_ERROR_CODES.EVENT_DUPLICATE]: ErrorSeverity.INFO,
  [EVENT_ERROR_CODES.EVENT_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [EVENT_ERROR_CODES.EVENT_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [EVENT_ERROR_CODES.EVENT_PUBLISHING_FAILED]: ErrorSeverity.ERROR,
  [EVENT_ERROR_CODES.EVENT_CONSUMPTION_FAILED]: ErrorSeverity.ERROR,
  [EVENT_ERROR_CODES.EVENT_ROUTING_FAILED]: ErrorSeverity.ERROR,
  
  // Quest error codes
  [QUEST_ERROR_CODES.QUEST_NOT_FOUND]: ErrorSeverity.WARNING,
  [QUEST_ERROR_CODES.USER_QUEST_NOT_FOUND]: ErrorSeverity.WARNING,
  [QUEST_ERROR_CODES.INVALID_QUEST_DATA]: ErrorSeverity.WARNING,
  [QUEST_ERROR_CODES.QUEST_ALREADY_COMPLETED]: ErrorSeverity.INFO,
  [QUEST_ERROR_CODES.QUEST_PREREQUISITES_NOT_MET]: ErrorSeverity.INFO,
  [QUEST_ERROR_CODES.QUEST_EXPIRED]: ErrorSeverity.INFO,
  [QUEST_ERROR_CODES.QUEST_NOT_STARTED]: ErrorSeverity.INFO,
  [QUEST_ERROR_CODES.QUEST_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [QUEST_ERROR_CODES.QUEST_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [QUEST_ERROR_CODES.QUEST_PROGRESS_UPDATE_FAILED]: ErrorSeverity.ERROR,
  [QUEST_ERROR_CODES.QUEST_COMPLETION_FAILED]: ErrorSeverity.ERROR,
  [QUEST_ERROR_CODES.QUEST_REWARD_DISTRIBUTION_FAILED]: ErrorSeverity.ERROR,
  
  // Reward error codes
  [REWARD_ERROR_CODES.REWARD_NOT_FOUND]: ErrorSeverity.WARNING,
  [REWARD_ERROR_CODES.USER_REWARD_NOT_FOUND]: ErrorSeverity.WARNING,
  [REWARD_ERROR_CODES.INVALID_REWARD_DATA]: ErrorSeverity.WARNING,
  [REWARD_ERROR_CODES.REWARD_ALREADY_CLAIMED]: ErrorSeverity.INFO,
  [REWARD_ERROR_CODES.REWARD_PREREQUISITES_NOT_MET]: ErrorSeverity.INFO,
  [REWARD_ERROR_CODES.REWARD_EXPIRED]: ErrorSeverity.INFO,
  [REWARD_ERROR_CODES.INSUFFICIENT_POINTS]: ErrorSeverity.INFO,
  [REWARD_ERROR_CODES.REWARD_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [REWARD_ERROR_CODES.REWARD_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [REWARD_ERROR_CODES.REWARD_DISTRIBUTION_FAILED]: ErrorSeverity.ERROR,
  [REWARD_ERROR_CODES.REWARD_NOTIFICATION_FAILED]: ErrorSeverity.WARNING,
  [REWARD_ERROR_CODES.REWARD_SYNC_FAILED]: ErrorSeverity.WARNING,
  
  // Rule error codes
  [RULE_ERROR_CODES.RULE_NOT_FOUND]: ErrorSeverity.WARNING,
  [RULE_ERROR_CODES.INVALID_RULE_DATA]: ErrorSeverity.WARNING,
  [RULE_ERROR_CODES.RULE_DISABLED]: ErrorSeverity.INFO,
  [RULE_ERROR_CODES.RULE_CONDITION_INVALID]: ErrorSeverity.WARNING,
  [RULE_ERROR_CODES.RULE_ACTION_INVALID]: ErrorSeverity.WARNING,
  [RULE_ERROR_CODES.RULE_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [RULE_ERROR_CODES.RULE_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [RULE_ERROR_CODES.RULE_EVALUATION_FAILED]: ErrorSeverity.ERROR,
  [RULE_ERROR_CODES.RULE_ACTION_EXECUTION_FAILED]: ErrorSeverity.ERROR,
  [RULE_ERROR_CODES.RULE_LOADING_FAILED]: ErrorSeverity.ERROR,
  
  // Profile error codes
  [PROFILE_ERROR_CODES.PROFILE_NOT_FOUND]: ErrorSeverity.WARNING,
  [PROFILE_ERROR_CODES.INVALID_PROFILE_DATA]: ErrorSeverity.WARNING,
  [PROFILE_ERROR_CODES.PROFILE_ALREADY_EXISTS]: ErrorSeverity.INFO,
  [PROFILE_ERROR_CODES.PROFILE_DISABLED]: ErrorSeverity.INFO,
  [PROFILE_ERROR_CODES.INVALID_XP_AMOUNT]: ErrorSeverity.WARNING,
  [PROFILE_ERROR_CODES.INVALID_LEVEL]: ErrorSeverity.WARNING,
  [PROFILE_ERROR_CODES.PROFILE_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [PROFILE_ERROR_CODES.PROFILE_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [PROFILE_ERROR_CODES.PROFILE_UPDATE_FAILED]: ErrorSeverity.ERROR,
  [PROFILE_ERROR_CODES.PROFILE_CREATION_FAILED]: ErrorSeverity.ERROR,
  [PROFILE_ERROR_CODES.PROFILE_SYNC_FAILED]: ErrorSeverity.WARNING,
  
  // Leaderboard error codes
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_NOT_FOUND]: ErrorSeverity.WARNING,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_PARAMETERS]: ErrorSeverity.WARNING,
  [LEADERBOARD_ERROR_CODES.INVALID_JOURNEY_TYPE]: ErrorSeverity.WARNING,
  [LEADERBOARD_ERROR_CODES.INVALID_TIME_PERIOD]: ErrorSeverity.WARNING,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_SIZE]: ErrorSeverity.WARNING,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PROCESSING_FAILED]: ErrorSeverity.ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PERSISTENCE_ERROR]: ErrorSeverity.ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CALCULATION_FAILED]: ErrorSeverity.ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CACHE_ERROR]: ErrorSeverity.ERROR,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_REFRESH_FAILED]: ErrorSeverity.ERROR,
  
  // Database error codes
  [DATABASE_ERROR_CODES.CONNECTION_FAILED]: ErrorSeverity.CRITICAL,
  [DATABASE_ERROR_CODES.QUERY_FAILED]: ErrorSeverity.ERROR,
  [DATABASE_ERROR_CODES.TRANSACTION_FAILED]: ErrorSeverity.ERROR,
  [DATABASE_ERROR_CODES.CONSTRAINT_VIOLATION]: ErrorSeverity.ERROR,
  [DATABASE_ERROR_CODES.DEADLOCK_DETECTED]: ErrorSeverity.ERROR,
  [DATABASE_ERROR_CODES.TIMEOUT]: ErrorSeverity.ERROR,
  [DATABASE_ERROR_CODES.CONNECTION_POOL_EXHAUSTED]: ErrorSeverity.CRITICAL,
  [DATABASE_ERROR_CODES.MIGRATION_FAILED]: ErrorSeverity.CRITICAL,
  
  // Kafka error codes
  [KAFKA_ERROR_CODES.PRODUCER_ERROR]: ErrorSeverity.ERROR,
  [KAFKA_ERROR_CODES.CONSUMER_ERROR]: ErrorSeverity.ERROR,
  [KAFKA_ERROR_CODES.BROKER_UNAVAILABLE]: ErrorSeverity.CRITICAL,
  [KAFKA_ERROR_CODES.TOPIC_CREATION_FAILED]: ErrorSeverity.ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_SERIALIZATION_FAILED]: ErrorSeverity.ERROR,
  [KAFKA_ERROR_CODES.MESSAGE_DESERIALIZATION_FAILED]: ErrorSeverity.ERROR,
  [KAFKA_ERROR_CODES.SCHEMA_VALIDATION_FAILED]: ErrorSeverity.WARNING,
  [KAFKA_ERROR_CODES.REBALANCING_ERROR]: ErrorSeverity.WARNING,
  
  // Redis error codes
  [REDIS_ERROR_CODES.CONNECTION_FAILED]: ErrorSeverity.ERROR,
  [REDIS_ERROR_CODES.OPERATION_FAILED]: ErrorSeverity.ERROR,
  [REDIS_ERROR_CODES.KEY_NOT_FOUND]: ErrorSeverity.WARNING,
  [REDIS_ERROR_CODES.SERIALIZATION_FAILED]: ErrorSeverity.ERROR,
  [REDIS_ERROR_CODES.DESERIALIZATION_FAILED]: ErrorSeverity.ERROR,
  [REDIS_ERROR_CODES.TIMEOUT]: ErrorSeverity.ERROR,
  [REDIS_ERROR_CODES.MEMORY_LIMIT_REACHED]: ErrorSeverity.CRITICAL,
  
  // General error codes
  [GENERAL_ERROR_CODES.BAD_REQUEST]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.UNAUTHORIZED]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.FORBIDDEN]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.NOT_FOUND]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.METHOD_NOT_ALLOWED]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.CONFLICT]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.GONE]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.UNPROCESSABLE_ENTITY]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.TOO_MANY_REQUESTS]: ErrorSeverity.WARNING,
  [GENERAL_ERROR_CODES.INTERNAL_SERVER_ERROR]: ErrorSeverity.ERROR,
  [GENERAL_ERROR_CODES.NOT_IMPLEMENTED]: ErrorSeverity.ERROR,
  [GENERAL_ERROR_CODES.SERVICE_UNAVAILABLE]: ErrorSeverity.ERROR,
  [GENERAL_ERROR_CODES.GATEWAY_TIMEOUT]: ErrorSeverity.ERROR,
  [GENERAL_ERROR_CODES.UNEXPECTED_ERROR]: ErrorSeverity.ERROR
};

/**
 * Maps error codes to retryable status
 */
export const ERROR_RETRYABLE_MAP: Record<string, boolean> = {
  // Achievement error codes
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOT_FOUND]: false,
  [ACHIEVEMENT_ERROR_CODES.USER_ACHIEVEMENT_NOT_FOUND]: false,
  [ACHIEVEMENT_ERROR_CODES.INVALID_ACHIEVEMENT_DATA]: false,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_ALREADY_UNLOCKED]: false,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_CRITERIA_NOT_MET]: false,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_DISABLED]: false,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PROCESSING_FAILED]: true,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PERSISTENCE_ERROR]: true,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOTIFICATION_FAILED]: true,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_RULE_EVALUATION_FAILED]: true,
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_SYNC_FAILED]: true,
  
  // Event error codes
  [EVENT_ERROR_CODES.EVENT_VALIDATION_FAILED]: false,
  [EVENT_ERROR_CODES.EVENT_MISSING_REQUIRED_FIELDS]: false,
  [EVENT_ERROR_CODES.EVENT_INVALID_TYPE]: false,
  [EVENT_ERROR_CODES.EVENT_INVALID_JOURNEY]: false,
  [EVENT_ERROR_CODES.EVENT_INVALID_USER_ID]: false,
  [EVENT_ERROR_CODES.EVENT_DUPLICATE]: false,
  [EVENT_ERROR_CODES.EVENT_PROCESSING_FAILED]: true,
  [EVENT_ERROR_CODES.EVENT_PERSISTENCE_ERROR]: true,
  [EVENT_ERROR_CODES.EVENT_PUBLISHING_FAILED]: true,
  [EVENT_ERROR_CODES.EVENT_CONSUMPTION_FAILED]: true,
  [EVENT_ERROR_CODES.EVENT_ROUTING_FAILED]: true,
  
  // Quest error codes
  [QUEST_ERROR_CODES.QUEST_NOT_FOUND]: false,
  [QUEST_ERROR_CODES.USER_QUEST_NOT_FOUND]: false,
  [QUEST_ERROR_CODES.INVALID_QUEST_DATA]: false,
  [QUEST_ERROR_CODES.QUEST_ALREADY_COMPLETED]: false,
  [QUEST_ERROR_CODES.QUEST_PREREQUISITES_NOT_MET]: false,
  [QUEST_ERROR_CODES.QUEST_EXPIRED]: false,
  [QUEST_ERROR_CODES.QUEST_NOT_STARTED]: false,
  [QUEST_ERROR_CODES.QUEST_PROCESSING_FAILED]: true,
  [QUEST_ERROR_CODES.QUEST_PERSISTENCE_ERROR]: true,
  [QUEST_ERROR_CODES.QUEST_PROGRESS_UPDATE_FAILED]: true,
  [QUEST_ERROR_CODES.QUEST_COMPLETION_FAILED]: true,
  [QUEST_ERROR_CODES.QUEST_REWARD_DISTRIBUTION_FAILED]: true,
  
  // Reward error codes
  [REWARD_ERROR_CODES.REWARD_NOT_FOUND]: false,
  [REWARD_ERROR_CODES.USER_REWARD_NOT_FOUND]: false,
  [REWARD_ERROR_CODES.INVALID_REWARD_DATA]: false,
  [REWARD_ERROR_CODES.REWARD_ALREADY_CLAIMED]: false,
  [REWARD_ERROR_CODES.REWARD_PREREQUISITES_NOT_MET]: false,
  [REWARD_ERROR_CODES.REWARD_EXPIRED]: false,
  [REWARD_ERROR_CODES.INSUFFICIENT_POINTS]: false,
  [REWARD_ERROR_CODES.REWARD_PROCESSING_FAILED]: true,
  [REWARD_ERROR_CODES.REWARD_PERSISTENCE_ERROR]: true,
  [REWARD_ERROR_CODES.REWARD_DISTRIBUTION_FAILED]: true,
  [REWARD_ERROR_CODES.REWARD_NOTIFICATION_FAILED]: true,
  [REWARD_ERROR_CODES.REWARD_SYNC_FAILED]: true,
  
  // Rule error codes
  [RULE_ERROR_CODES.RULE_NOT_FOUND]: false,
  [RULE_ERROR_CODES.INVALID_RULE_DATA]: false,
  [RULE_ERROR_CODES.RULE_DISABLED]: false,
  [RULE_ERROR_CODES.RULE_CONDITION_INVALID]: false,
  [RULE_ERROR_CODES.RULE_ACTION_INVALID]: false,
  [RULE_ERROR_CODES.RULE_PROCESSING_FAILED]: true,
  [RULE_ERROR_CODES.RULE_PERSISTENCE_ERROR]: true,
  [RULE_ERROR_CODES.RULE_EVALUATION_FAILED]: true,
  [RULE_ERROR_CODES.RULE_ACTION_EXECUTION_FAILED]: true,
  [RULE_ERROR_CODES.RULE_LOADING_FAILED]: true,
  
  // Profile error codes
  [PROFILE_ERROR_CODES.PROFILE_NOT_FOUND]: false,
  [PROFILE_ERROR_CODES.INVALID_PROFILE_DATA]: false,
  [PROFILE_ERROR_CODES.PROFILE_ALREADY_EXISTS]: false,
  [PROFILE_ERROR_CODES.PROFILE_DISABLED]: false,
  [PROFILE_ERROR_CODES.INVALID_XP_AMOUNT]: false,
  [PROFILE_ERROR_CODES.INVALID_LEVEL]: false,
  [PROFILE_ERROR_CODES.PROFILE_PROCESSING_FAILED]: true,
  [PROFILE_ERROR_CODES.PROFILE_PERSISTENCE_ERROR]: true,
  [PROFILE_ERROR_CODES.PROFILE_UPDATE_FAILED]: true,
  [PROFILE_ERROR_CODES.PROFILE_CREATION_FAILED]: true,
  [PROFILE_ERROR_CODES.PROFILE_SYNC_FAILED]: true,
  
  // Leaderboard error codes
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_NOT_FOUND]: false,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_PARAMETERS]: false,
  [LEADERBOARD_ERROR_CODES.INVALID_JOURNEY_TYPE]: false,
  [LEADERBOARD_ERROR_CODES.INVALID_TIME_PERIOD]: false,
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_SIZE]: false,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PROCESSING_FAILED]: true,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PERSISTENCE_ERROR]: true,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CALCULATION_FAILED]: true,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CACHE_ERROR]: true,
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_REFRESH_FAILED]: true,
  
  // Database error codes
  [DATABASE_ERROR_CODES.CONNECTION_FAILED]: true,
  [DATABASE_ERROR_CODES.QUERY_FAILED]: true,
  [DATABASE_ERROR_CODES.TRANSACTION_FAILED]: true,
  [DATABASE_ERROR_CODES.CONSTRAINT_VIOLATION]: false,
  [DATABASE_ERROR_CODES.DEADLOCK_DETECTED]: true,
  [DATABASE_ERROR_CODES.TIMEOUT]: true,
  [DATABASE_ERROR_CODES.CONNECTION_POOL_EXHAUSTED]: true,
  [DATABASE_ERROR_CODES.MIGRATION_FAILED]: false,
  
  // Kafka error codes
  [KAFKA_ERROR_CODES.PRODUCER_ERROR]: true,
  [KAFKA_ERROR_CODES.CONSUMER_ERROR]: true,
  [KAFKA_ERROR_CODES.BROKER_UNAVAILABLE]: true,
  [KAFKA_ERROR_CODES.TOPIC_CREATION_FAILED]: true,
  [KAFKA_ERROR_CODES.MESSAGE_SERIALIZATION_FAILED]: false,
  [KAFKA_ERROR_CODES.MESSAGE_DESERIALIZATION_FAILED]: false,
  [KAFKA_ERROR_CODES.SCHEMA_VALIDATION_FAILED]: false,
  [KAFKA_ERROR_CODES.REBALANCING_ERROR]: true,
  
  // Redis error codes
  [REDIS_ERROR_CODES.CONNECTION_FAILED]: true,
  [REDIS_ERROR_CODES.OPERATION_FAILED]: true,
  [REDIS_ERROR_CODES.KEY_NOT_FOUND]: false,
  [REDIS_ERROR_CODES.SERIALIZATION_FAILED]: false,
  [REDIS_ERROR_CODES.DESERIALIZATION_FAILED]: false,
  [REDIS_ERROR_CODES.TIMEOUT]: true,
  [REDIS_ERROR_CODES.MEMORY_LIMIT_REACHED]: false,
  
  // General error codes
  [GENERAL_ERROR_CODES.BAD_REQUEST]: false,
  [GENERAL_ERROR_CODES.UNAUTHORIZED]: false,
  [GENERAL_ERROR_CODES.FORBIDDEN]: false,
  [GENERAL_ERROR_CODES.NOT_FOUND]: false,
  [GENERAL_ERROR_CODES.METHOD_NOT_ALLOWED]: false,
  [GENERAL_ERROR_CODES.CONFLICT]: false,
  [GENERAL_ERROR_CODES.GONE]: false,
  [GENERAL_ERROR_CODES.UNPROCESSABLE_ENTITY]: false,
  [GENERAL_ERROR_CODES.TOO_MANY_REQUESTS]: true,
  [GENERAL_ERROR_CODES.INTERNAL_SERVER_ERROR]: true,
  [GENERAL_ERROR_CODES.NOT_IMPLEMENTED]: false,
  [GENERAL_ERROR_CODES.SERVICE_UNAVAILABLE]: true,
  [GENERAL_ERROR_CODES.GATEWAY_TIMEOUT]: true,
  [GENERAL_ERROR_CODES.UNEXPECTED_ERROR]: true
};

/**
 * Error message templates with placeholder support
 */
export const ERROR_MESSAGES: Record<string, string> = {
  // Achievement error codes
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOT_FOUND]: 'Achievement with ID {{achievementId}} not found',
  [ACHIEVEMENT_ERROR_CODES.USER_ACHIEVEMENT_NOT_FOUND]: 'User achievement for user {{userId}} and achievement {{achievementId}} not found',
  [ACHIEVEMENT_ERROR_CODES.INVALID_ACHIEVEMENT_DATA]: 'Invalid achievement data: {{details}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_ALREADY_UNLOCKED]: 'Achievement {{achievementId}} already unlocked for user {{userId}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_CRITERIA_NOT_MET]: 'Criteria not met for achievement {{achievementId}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_DISABLED]: 'Achievement {{achievementId}} is currently disabled',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PROCESSING_FAILED]: 'Failed to process achievement {{achievementId}} for user {{userId}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_PERSISTENCE_ERROR]: 'Failed to persist achievement data: {{details}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_NOTIFICATION_FAILED]: 'Failed to send achievement notification for user {{userId}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_RULE_EVALUATION_FAILED]: 'Failed to evaluate rules for achievement {{achievementId}}',
  [ACHIEVEMENT_ERROR_CODES.ACHIEVEMENT_SYNC_FAILED]: 'Failed to sync achievement data with external systems',
  
  // Event error codes
  [EVENT_ERROR_CODES.EVENT_VALIDATION_FAILED]: 'Event validation failed: {{details}}',
  [EVENT_ERROR_CODES.EVENT_MISSING_REQUIRED_FIELDS]: 'Event missing required fields: {{fields}}',
  [EVENT_ERROR_CODES.EVENT_INVALID_TYPE]: 'Invalid event type: {{type}}',
  [EVENT_ERROR_CODES.EVENT_INVALID_JOURNEY]: 'Invalid journey type: {{journey}}',
  [EVENT_ERROR_CODES.EVENT_INVALID_USER_ID]: 'Invalid user ID: {{userId}}',
  [EVENT_ERROR_CODES.EVENT_DUPLICATE]: 'Duplicate event detected with ID {{eventId}}',
  [EVENT_ERROR_CODES.EVENT_PROCESSING_FAILED]: 'Failed to process event {{eventId}}',
  [EVENT_ERROR_CODES.EVENT_PERSISTENCE_ERROR]: 'Failed to persist event data: {{details}}',
  [EVENT_ERROR_CODES.EVENT_PUBLISHING_FAILED]: 'Failed to publish event to Kafka: {{details}}',
  [EVENT_ERROR_CODES.EVENT_CONSUMPTION_FAILED]: 'Failed to consume event from Kafka: {{details}}',
  [EVENT_ERROR_CODES.EVENT_ROUTING_FAILED]: 'Failed to route event {{eventId}} to appropriate handler',
  
  // Quest error codes
  [QUEST_ERROR_CODES.QUEST_NOT_FOUND]: 'Quest with ID {{questId}} not found',
  [QUEST_ERROR_CODES.USER_QUEST_NOT_FOUND]: 'User quest for user {{userId}} and quest {{questId}} not found',
  [QUEST_ERROR_CODES.INVALID_QUEST_DATA]: 'Invalid quest data: {{details}}',
  [QUEST_ERROR_CODES.QUEST_ALREADY_COMPLETED]: 'Quest {{questId}} already completed by user {{userId}}',
  [QUEST_ERROR_CODES.QUEST_PREREQUISITES_NOT_MET]: 'Prerequisites not met for quest {{questId}}',
  [QUEST_ERROR_CODES.QUEST_EXPIRED]: 'Quest {{questId}} has expired',
  [QUEST_ERROR_CODES.QUEST_NOT_STARTED]: 'Quest {{questId}} has not been started by user {{userId}}',
  [QUEST_ERROR_CODES.QUEST_PROCESSING_FAILED]: 'Failed to process quest {{questId}} for user {{userId}}',
  [QUEST_ERROR_CODES.QUEST_PERSISTENCE_ERROR]: 'Failed to persist quest data: {{details}}',
  [QUEST_ERROR_CODES.QUEST_PROGRESS_UPDATE_FAILED]: 'Failed to update progress for quest {{questId}}',
  [QUEST_ERROR_CODES.QUEST_COMPLETION_FAILED]: 'Failed to complete quest {{questId}} for user {{userId}}',
  [QUEST_ERROR_CODES.QUEST_REWARD_DISTRIBUTION_FAILED]: 'Failed to distribute rewards for quest {{questId}}',
  
  // Reward error codes
  [REWARD_ERROR_CODES.REWARD_NOT_FOUND]: 'Reward with ID {{rewardId}} not found',
  [REWARD_ERROR_CODES.USER_REWARD_NOT_FOUND]: 'User reward for user {{userId}} and reward {{rewardId}} not found',
  [REWARD_ERROR_CODES.INVALID_REWARD_DATA]: 'Invalid reward data: {{details}}',
  [REWARD_ERROR_CODES.REWARD_ALREADY_CLAIMED]: 'Reward {{rewardId}} already claimed by user {{userId}}',
  [REWARD_ERROR_CODES.REWARD_PREREQUISITES_NOT_MET]: 'Prerequisites not met for reward {{rewardId}}',
  [REWARD_ERROR_CODES.REWARD_EXPIRED]: 'Reward {{rewardId}} has expired',
  [REWARD_ERROR_CODES.INSUFFICIENT_POINTS]: 'Insufficient points to claim reward {{rewardId}}',
  [REWARD_ERROR_CODES.REWARD_PROCESSING_FAILED]: 'Failed to process reward {{rewardId}} for user {{userId}}',
  [REWARD_ERROR_CODES.REWARD_PERSISTENCE_ERROR]: 'Failed to persist reward data: {{details}}',
  [REWARD_ERROR_CODES.REWARD_DISTRIBUTION_FAILED]: 'Failed to distribute reward {{rewardId}} to user {{userId}}',
  [REWARD_ERROR_CODES.REWARD_NOTIFICATION_FAILED]: 'Failed to send reward notification for user {{userId}}',
  [REWARD_ERROR_CODES.REWARD_SYNC_FAILED]: 'Failed to sync reward data with external systems',
  
  // Rule error codes
  [RULE_ERROR_CODES.RULE_NOT_FOUND]: 'Rule with ID {{ruleId}} not found',
  [RULE_ERROR_CODES.INVALID_RULE_DATA]: 'Invalid rule data: {{details}}',
  [RULE_ERROR_CODES.RULE_DISABLED]: 'Rule {{ruleId}} is currently disabled',
  [RULE_ERROR_CODES.RULE_CONDITION_INVALID]: 'Invalid condition in rule {{ruleId}}: {{details}}',
  [RULE_ERROR_CODES.RULE_ACTION_INVALID]: 'Invalid action in rule {{ruleId}}: {{details}}',
  [RULE_ERROR_CODES.RULE_PROCESSING_FAILED]: 'Failed to process rule {{ruleId}}',
  [RULE_ERROR_CODES.RULE_PERSISTENCE_ERROR]: 'Failed to persist rule data: {{details}}',
  [RULE_ERROR_CODES.RULE_EVALUATION_FAILED]: 'Failed to evaluate rule {{ruleId}}: {{details}}',
  [RULE_ERROR_CODES.RULE_ACTION_EXECUTION_FAILED]: 'Failed to execute action for rule {{ruleId}}: {{details}}',
  [RULE_ERROR_CODES.RULE_LOADING_FAILED]: 'Failed to load rules: {{details}}',
  
  // Profile error codes
  [PROFILE_ERROR_CODES.PROFILE_NOT_FOUND]: 'Profile for user {{userId}} not found',
  [PROFILE_ERROR_CODES.INVALID_PROFILE_DATA]: 'Invalid profile data: {{details}}',
  [PROFILE_ERROR_CODES.PROFILE_ALREADY_EXISTS]: 'Profile for user {{userId}} already exists',
  [PROFILE_ERROR_CODES.PROFILE_DISABLED]: 'Profile for user {{userId}} is currently disabled',
  [PROFILE_ERROR_CODES.INVALID_XP_AMOUNT]: 'Invalid XP amount: {{xp}}',
  [PROFILE_ERROR_CODES.INVALID_LEVEL]: 'Invalid level: {{level}}',
  [PROFILE_ERROR_CODES.PROFILE_PROCESSING_FAILED]: 'Failed to process profile for user {{userId}}',
  [PROFILE_ERROR_CODES.PROFILE_PERSISTENCE_ERROR]: 'Failed to persist profile data: {{details}}',
  [PROFILE_ERROR_CODES.PROFILE_UPDATE_FAILED]: 'Failed to update profile for user {{userId}}',
  [PROFILE_ERROR_CODES.PROFILE_CREATION_FAILED]: 'Failed to create profile for user {{userId}}',
  [PROFILE_ERROR_CODES.PROFILE_SYNC_FAILED]: 'Failed to sync profile data with external systems',
  
  // Leaderboard error codes
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_NOT_FOUND]: 'Leaderboard for journey {{journey}} not found',
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_PARAMETERS]: 'Invalid leaderboard parameters: {{details}}',
  [LEADERBOARD_ERROR_CODES.INVALID_JOURNEY_TYPE]: 'Invalid journey type for leaderboard: {{journey}}',
  [LEADERBOARD_ERROR_CODES.INVALID_TIME_PERIOD]: 'Invalid time period for leaderboard: {{period}}',
  [LEADERBOARD_ERROR_CODES.INVALID_LEADERBOARD_SIZE]: 'Invalid leaderboard size: {{size}}',
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PROCESSING_FAILED]: 'Failed to process leaderboard for journey {{journey}}',
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_PERSISTENCE_ERROR]: 'Failed to persist leaderboard data: {{details}}',
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CALCULATION_FAILED]: 'Failed to calculate leaderboard rankings',
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_CACHE_ERROR]: 'Failed to cache leaderboard data: {{details}}',
  [LEADERBOARD_ERROR_CODES.LEADERBOARD_REFRESH_FAILED]: 'Failed to refresh leaderboard for journey {{journey}}',
  
  // Database error codes
  [DATABASE_ERROR_CODES.CONNECTION_FAILED]: 'Database connection failed: {{details}}',
  [DATABASE_ERROR_CODES.QUERY_FAILED]: 'Database query failed: {{details}}',
  [DATABASE_ERROR_CODES.TRANSACTION_FAILED]: 'Database transaction failed: {{details}}',
  [DATABASE_ERROR_CODES.CONSTRAINT_VIOLATION]: 'Database constraint violation: {{details}}',
  [DATABASE_ERROR_CODES.DEADLOCK_DETECTED]: 'Database deadlock detected: {{details}}',
  [DATABASE_ERROR_CODES.TIMEOUT]: 'Database operation timed out: {{details}}',
  [DATABASE_ERROR_CODES.CONNECTION_POOL_EXHAUSTED]: 'Database connection pool exhausted',
  [DATABASE_ERROR_CODES.MIGRATION_FAILED]: 'Database migration failed: {{details}}',
  
  // Kafka error codes
  [KAFKA_ERROR_CODES.PRODUCER_ERROR]: 'Kafka producer error: {{details}}',
  [KAFKA_ERROR_CODES.CONSUMER_ERROR]: 'Kafka consumer error: {{details}}',
  [KAFKA_ERROR_CODES.BROKER_UNAVAILABLE]: 'Kafka broker unavailable: {{details}}',
  [KAFKA_ERROR_CODES.TOPIC_CREATION_FAILED]: 'Kafka topic creation failed: {{details}}',
  [KAFKA_ERROR_CODES.MESSAGE_SERIALIZATION_FAILED]: 'Kafka message serialization failed: {{details}}',
  [KAFKA_ERROR_CODES.MESSAGE_DESERIALIZATION_FAILED]: 'Kafka message deserialization failed: {{details}}',
  [KAFKA_ERROR_CODES.SCHEMA_VALIDATION_FAILED]: 'Kafka schema validation failed: {{details}}',
  [KAFKA_ERROR_CODES.REBALANCING_ERROR]: 'Kafka consumer group rebalancing error: {{details}}',
  
  // Redis error codes
  [REDIS_ERROR_CODES.CONNECTION_FAILED]: 'Redis connection failed: {{details}}',
  [REDIS_ERROR_CODES.OPERATION_FAILED]: 'Redis operation failed: {{details}}',
  [REDIS_ERROR_CODES.KEY_NOT_FOUND]: 'Redis key not found: {{key}}',
  [REDIS_ERROR_CODES.SERIALIZATION_FAILED]: 'Redis serialization failed: {{details}}',
  [REDIS_ERROR_CODES.DESERIALIZATION_FAILED]: 'Redis deserialization failed: {{details}}',
  [REDIS_ERROR_CODES.TIMEOUT]: 'Redis operation timed out: {{details}}',
  [REDIS_ERROR_CODES.MEMORY_LIMIT_REACHED]: 'Redis memory limit reached',
  
  // General error codes
  [GENERAL_ERROR_CODES.BAD_REQUEST]: 'Bad request: {{details}}',
  [GENERAL_ERROR_CODES.UNAUTHORIZED]: 'Unauthorized: Authentication required',
  [GENERAL_ERROR_CODES.FORBIDDEN]: 'Forbidden: Insufficient permissions',
  [GENERAL_ERROR_CODES.NOT_FOUND]: 'Resource not found: {{resource}}',
  [GENERAL_ERROR_CODES.METHOD_NOT_ALLOWED]: 'Method not allowed: {{method}}',
  [GENERAL_ERROR_CODES.CONFLICT]: 'Resource conflict: {{details}}',
  [GENERAL_ERROR_CODES.GONE]: 'Resource no longer available: {{resource}}',
  [GENERAL_ERROR_CODES.UNPROCESSABLE_ENTITY]: 'Unprocessable entity: {{details}}',
  [GENERAL_ERROR_CODES.TOO_MANY_REQUESTS]: 'Too many requests: Rate limit exceeded',
  [GENERAL_ERROR_CODES.INTERNAL_SERVER_ERROR]: 'Internal server error occurred',
  [GENERAL_ERROR_CODES.NOT_IMPLEMENTED]: 'Feature not implemented: {{feature}}',
  [GENERAL_ERROR_CODES.SERVICE_UNAVAILABLE]: 'Service temporarily unavailable',
  [GENERAL_ERROR_CODES.GATEWAY_TIMEOUT]: 'Gateway timeout: Request took too long to process',
  [GENERAL_ERROR_CODES.UNEXPECTED_ERROR]: 'An unexpected error occurred: {{details}}'
};

/**
 * Creates a complete error code definition with all metadata
 * @param code Error code string
 * @returns Complete error code definition
 */
export function getErrorDefinition(code: string): ErrorCodeDefinition {
  return {
    code,
    message: ERROR_MESSAGES[code] || 'Unknown error',
    httpStatus: HTTP_STATUS_MAP[code] || HttpStatus.INTERNAL_SERVER_ERROR,
    type: ERROR_TYPE_MAP[code] || ErrorType.UNEXPECTED_ERROR,
    category: ERROR_CATEGORY_MAP[code] || ErrorCategory.SYSTEM,
    severity: ERROR_SEVERITY_MAP[code] || ErrorSeverity.ERROR,
    retryable: ERROR_RETRYABLE_MAP[code] || false,
    loggable: true,
    alertable: ERROR_SEVERITY_MAP[code] === ErrorSeverity.CRITICAL || 
              ERROR_SEVERITY_MAP[code] === ErrorSeverity.ERROR
  };
}

/**
 * Formats an error message by replacing placeholders with values
 * @param template Error message template
 * @param params Parameters to replace in the template
 * @returns Formatted error message
 */
export function formatErrorMessage(template: string, params?: Record<string, any>): string {
  if (!params) return template;
  
  return template.replace(/\{\{(\w+)\}\}/g, (match, key) => {
    return params[key] !== undefined ? String(params[key]) : match;
  });
}